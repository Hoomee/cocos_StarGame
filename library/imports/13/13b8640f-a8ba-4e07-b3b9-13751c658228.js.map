{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "jumpHeight",
    "jumpDuration",
    "maxMoveSpeed",
    "accel",
    "jumpAudio",
    "default",
    "url",
    "AudioClip",
    "onLoad",
    "jumpAction",
    "setJumpAction",
    "node",
    "runAction",
    "accLeft",
    "accRight",
    "xSpeed",
    "setInputControl",
    "jumpUp",
    "moveBy",
    "p",
    "easing",
    "easeCubicActionOut",
    "jumpDown",
    "easeCubicActionIn",
    "callback",
    "callFunc",
    "playJumpSound",
    "repeatForever",
    "sequence",
    "audioEngine",
    "playEffect",
    "self",
    "eventManager",
    "addListener",
    "event",
    "EventListener",
    "KEYBOARD",
    "onKeyPressed",
    "keyCode",
    "KEY",
    "a",
    "d",
    "conKeyReleased",
    "update",
    "dt",
    "Math",
    "abs",
    "x"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n       jumpHeight:0,\r\n        jumpDuration:0,\r\n        maxMoveSpeed:0,\r\n        accel:0,\r\n        \r\n        jumpAudio:{\r\n            default:null,\r\n            url:cc.AudioClip\r\n        }\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n\r\n        this.xSpeed = 0;\r\n\r\n        this.setInputControl();\r\n    },\r\n    setJumpAction:function(){\r\n        var jumpUp = cc.moveBy(this.jumpDuration,cc.p(0,this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        var jumpDown = cc.moveBy(this.jumpDuration,cc.p(0,-this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        \r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        \r\n    \r\n        \r\n        return cc.repeatForever(cc.sequence(jumpUp,jumpDown,callback));\r\n        \r\n        \r\n    },\r\n    playJumpSound:function(){\r\n        cc.audioEngine.playEffect(this.jumpAudio,false);  \r\n    },\r\n    setInputControl:function(){\r\n        var self = this;\r\n        cc.eventManager.addListener({\r\n            event:cc.EventListener.KEYBOARD,\r\n            onKeyPressed:function(keyCode,event){\r\n                switch(keyCode){\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                }\r\n            },\r\n            conKeyReleased:function(keyCode,event){\r\n                switch(keyCode){\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                }\r\n            }\r\n        },self.node);\r\n    },\r\n\r\n    \r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if(this.accLeft){\r\n            this.xSpeed -= this.accel * dt;\r\n        }else if(this.accRight){\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n\r\n        if( Math.abs(this.xSpeed) > this.maxMoveSpeed){\r\n            // 只是确保速度值为 最大值  ，方向与保持一致\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        //  randX = ( Math.abs(randX) > this.node.width/2 ? this.node.width : randX )\r\n         if( Math.abs(this.node.x) < 400){\r\n                this.node.x += this.xSpeed * dt;\r\n         }else{\r\n             this.xSpeed = -1*this.xSpeed;\r\n             this.node.x += this.node.x / Math.abs(this.node.x) * (-1);\r\n            //  this.accel = -this.accel;\r\n            //  this.accLeft = !this.accLeft;\r\n            //  this.accRight = ! this.accLeft;\r\n            //  this.node.x += 20;\r\n         }\r\n        \r\n    },\r\n});\r\n"
  ]
}